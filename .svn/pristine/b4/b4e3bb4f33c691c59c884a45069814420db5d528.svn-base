package com.cynapsys.Views;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.PostConstruct;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.bean.SessionScoped;
import javax.faces.context.ExternalContext;
import javax.faces.context.FacesContext;
import javax.servlet.http.HttpSession;

import com.cynapsys.entities.Assureur;
import com.cynapsys.entities.ClientAcquereur;
import com.cynapsys.entities.Groupe;
import com.cynapsys.service.AssureurService;
import com.cynapsys.service.ClientAcquereurService;
import com.cynapsys.service.GroupeService;

@ManagedBean(name = "rechercheClientAcquereurBean")
@SessionScoped
public class RechercheClientAcquereurBean implements Serializable {

	private static final long serialVersionUID = 1L;
	private HttpSession session;
	
	@ManagedProperty(value = "#{clientAcquereurService}")
	private ClientAcquereurService clientAcquereurService;
	
	@ManagedProperty(value = "#{assureurService}")
	private AssureurService assureurService;
	
	@ManagedProperty(value = "#{groupeService}")
	private GroupeService groupeService;
	
	private ClientAcquereur newClientAcquereur;
	private ClientAcquereur selectClientAcquereur;
	private List<ClientAcquereur> clientAcquereurList;
	private List<ClientAcquereur> filtered;
	
	private List<Assureur> assureurList;
	private List<Groupe> groupeList;
	
	@SuppressWarnings("unused")
	public RechercheClientAcquereurBean() {
		FacesContext context = FacesContext.getCurrentInstance();
		ExternalContext extContext = context.getExternalContext();
		session = (HttpSession) context.getExternalContext().getSession(false);
	}
	
	
	@PostConstruct
	public void initialisation() {
		//Client Acquereur 
		newClientAcquereur = new ClientAcquereur();
		clientAcquereurList = new ArrayList<ClientAcquereur>();
		filtered = new ArrayList<ClientAcquereur>(clientAcquereurList);
		selectClientAcquereur = null;
		
		//Assureur List
		assureurList = new ArrayList<Assureur>();
		assureurList = assureurService.findAll();
		
		//Groupe List
		groupeList = new ArrayList<Groupe>();
		groupeList = groupeService.findAll();
		
	}

	
	public void createClientAcquereur() {
		newClientAcquereur = new ClientAcquereur();
		selectClientAcquereur = null;
		clientAcquereurList = new ArrayList<ClientAcquereur>();
		filtered = new ArrayList<ClientAcquereur>(clientAcquereurList);
		
		//Assureur List
		assureurList = new ArrayList<Assureur>();
		assureurList = assureurService.findAll();
		
		//Groupe List
		groupeList = new ArrayList<Groupe>();
		groupeList = groupeService.findAll();

	}
	
	public void onselectClientAcquereur() {
		newClientAcquereur = new ClientAcquereur();
		newClientAcquereur =clientAcquereurService
				.findById(String.valueOf(selectClientAcquereur.getCodeAcquereur()));
		clientAcquereurService = null ;
	}

	
	
	public void rechercheClientAcquereur() {
		clientAcquereurList = new ArrayList<ClientAcquereur>();
		clientAcquereurList = clientAcquereurService
				.rechercheClientAcquereur(newClientAcquereur);
	}
	

	public HttpSession getSession() {
		return session;
	}


	public void setSession(HttpSession session) {
		this.session = session;
	}


	public ClientAcquereurService getClientAcquereurService() {
		return clientAcquereurService;
	}


	public void setClientAcquereurService(
			ClientAcquereurService clientAcquereurService) {
		this.clientAcquereurService = clientAcquereurService;
	}


	public AssureurService getAssureurService() {
		return assureurService;
	}


	public void setAssureurService(AssureurService assureurService) {
		this.assureurService = assureurService;
	}


	public GroupeService getGroupeService() {
		return groupeService;
	}


	public void setGroupeService(GroupeService groupeService) {
		this.groupeService = groupeService;
	}


	public ClientAcquereur getNewClientAcquereur() {
		return newClientAcquereur;
	}


	public void setNewClientAcquereur(ClientAcquereur newClientAcquereur) {
		this.newClientAcquereur = newClientAcquereur;
	}


	public ClientAcquereur getSelectClientAcquereur() {
		return selectClientAcquereur;
	}


	public void setSelectClientAcquereur(ClientAcquereur selectClientAcquereur) {
		this.selectClientAcquereur = selectClientAcquereur;
	}


	public List<ClientAcquereur> getClientAcquereurList() {
		return clientAcquereurList;
	}


	public void setClientAcquereurList(List<ClientAcquereur> clientAcquereurList) {
		this.clientAcquereurList = clientAcquereurList;
	}


	public List<ClientAcquereur> getFiltered() {
		return filtered;
	}


	public void setFiltered(List<ClientAcquereur> filtered) {
		this.filtered = filtered;
	}


	public List<Assureur> getAssureurList() {
		return assureurList;
	}


	public void setAssureurList(List<Assureur> assureurList) {
		this.assureurList = assureurList;
	}


	public List<Groupe> getGroupeList() {
		return groupeList;
	}


	public void setGroupeList(List<Groupe> groupeList) {
		this.groupeList = groupeList;
	}
	
	
	
	
	
}
