/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cynapsys.entities;

import java.io.Serializable;
import java.util.List;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 *
 * @author UC057
 */
@Entity
@SequenceGenerator(name="SEQ_FONCTIONNALITE",sequenceName="S_FONCTIONNALITE")
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "Fonctionnalite.findAll", query = "SELECT f FROM Fonctionnalite f"),
    @NamedQuery(name = "Fonctionnalite.findById", query = "SELECT f FROM Fonctionnalite f WHERE f.id = :id"),
    @NamedQuery(name = "Fonctionnalite.findByNomFonctionnalite", query = "SELECT f FROM Fonctionnalite f WHERE f.nomFonctionnalite = :nomFonctionnalite")})
public class Fonctionnalite implements Serializable {
    private static final long serialVersionUID = 1L;
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO,generator="SEQ_FONCTIONNALITE")
    @Basic(optional = false)
    @NotNull
    @Column(nullable = false)
    private Integer id;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 254)
    @Column(name = "NOM_FONCTIONNALITE", nullable = false, length = 254)
    private String nomFonctionnalite;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "fonctionnalite", fetch = FetchType.LAZY)
    private List<FoncGroupUser> foncGroupUserList;

    public Fonctionnalite() {
    }

    public Fonctionnalite(Integer id) {
        this.id = id;
    }

    public Fonctionnalite(Integer id, String nomFonctionnalite) {
        this.id = id;
        this.nomFonctionnalite = nomFonctionnalite;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getNomFonctionnalite() {
        return nomFonctionnalite;
    }

    public void setNomFonctionnalite(String nomFonctionnalite) {
        this.nomFonctionnalite = nomFonctionnalite;
    }

    @XmlTransient
    public List<FoncGroupUser> getFoncGroupUserList() {
        return foncGroupUserList;
    }

    public void setFoncGroupUserList(List<FoncGroupUser> foncGroupUserList) {
        this.foncGroupUserList = foncGroupUserList;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Fonctionnalite)) {
            return false;
        }
        Fonctionnalite other = (Fonctionnalite) object;
        if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "com.cynapsys.entities.Fonctionnalite[ id=" + id + " ]";
    }
    
}
