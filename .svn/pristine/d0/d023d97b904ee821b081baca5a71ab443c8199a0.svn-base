package com.cynapsys.Views.Converter;

import javax.faces.bean.ApplicationScoped;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.component.UIComponent;
import javax.faces.context.FacesContext;
import javax.faces.convert.Converter;
import javax.faces.convert.FacesConverter;

import com.cynapsys.entities.Contrat;
import com.cynapsys.service.ContratService;

@ManagedBean
@ApplicationScoped
public class ContratConverterBean {

	@ManagedProperty(value = "#{contratService}")
	private ContratService contratService;

	public ContratService getContratService() {
		return contratService;
	}

	public void setContratService(ContratService contratService) {
		this.contratService = contratService;
	}

	@FacesConverter(value = "contratConverter")
	public static class ContratConverter implements Converter {

		@Override
		public Object getAsObject(FacesContext arg0, UIComponent arg1, String arg2) {
			Contrat contrat = new Contrat();
			if (arg2 != null && !String.valueOf(arg2).equals("") && !arg2.contains("------------")) {
				ContratConverterBean contratConverterBean = (ContratConverterBean) FacesContext.getCurrentInstance()
						.getApplication().evaluateExpressionGet(FacesContext.getCurrentInstance(),
								"#{contratConverterBean}", ContratConverterBean.class);

				contratConverterBean.getContratService().findById(arg2);

			}

			return contrat;
		}

		@Override
		public String getAsString(FacesContext arg0, UIComponent arg1, Object arg2) {
			Integer id = (arg2 instanceof Contrat) ? ((Contrat) arg2).getId() : null;

			return (id != null) ? String.valueOf(id) : null;
		}

	}
}
